plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

java {
    sourceCompatibility = '17'
}

bootJar {
    mainClass = 'com.zerobase.cms.order.OrderApplication'
}

bootJar { enabled = true }
jar { enabled = false }

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':domain')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'com.h2database:h2'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'it.ozimov:embedded-redis:0.7.3'
    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'
    testImplementation 'com.h2database:h2'
}

test {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
    
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile // QueryDSL 생성 디렉토리 설정

sourceSets {
    main {
        java {
            srcDirs += querydslDir // QueryDSL 생성 디렉토리를 소스 경로에 추가
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    destinationDirectory.set(querydslDir) // QueryDSL 파일 생성 디렉토리 설정
}

clean.doLast {
    delete querydslDir // Gradle clean 시 QueryDSL 생성 디렉토리 삭제
}
