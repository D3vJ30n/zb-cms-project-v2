plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

bootJar { enabled = false }
jar { enabled = true }

ext {
    set('springCloudVersion', "2023.0.2")
    set('querydslVersion', "5.0.0")
}

allprojects {
    group = 'com.zerobase'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    repositories {
        mavenCentral()
    }

    configurations {
        all {
            exclude group: 'org.slf4j', module: 'slf4j-simple'
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.data:spring-data-envers'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.hibernate.orm:hibernate-core:6.6.4.Final'
        implementation 'org.hibernate.orm:hibernate-envers:6.6.4.Final'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
        testImplementation 'org.mockito:mockito-core:5.8.0'
        testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'
        
        // Logging
        implementation 'ch.qos.logback:logback-classic'
        implementation 'org.slf4j:slf4j-api'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
            showStandardStreams = true
        }
        systemProperty 'spring.profiles.active', 'test'
    }
}

project(':domain') {
    bootJar { enabled = false }
    jar { enabled = true }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }

    dependencies {
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    }

    test {
        enabled = false
    }
}

configure(subprojects.findAll { it.name in ['order-api', 'user-api'] }) {
    dependencies {
        implementation project(':domain')
        
        // QueryDSL
        implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
        annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        // MySQL
        implementation 'com.mysql:mysql-connector-j:9.1.0'

        // JWT
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

        // Test를 위한 H2 데이터베이스
        testImplementation 'com.h2database:h2'

        // Test 관련 의존성
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
            exclude group: 'org.slf4j', module: 'slf4j-simple'
        }
        testImplementation 'com.h2database:h2'
        testImplementation('it.ozimov:embedded-redis:0.7.3') {
            exclude group: 'org.slf4j', module: 'slf4j-simple'
        }
        
        // Logging for test
        testImplementation 'ch.qos.logback:logback-classic'
    }

    def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', querydslDir]
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.getGeneratedSourceOutputDirectory().set(querydslDir)
    }

    clean {
        delete querydslDir
    }

    bootJar { enabled = true }
    jar { enabled = false }

    test {
        useJUnitPlatform()
        systemProperty 'spring.profiles.active', 'test'
    }
}

test {
    enabled = false
}

dependencies {
    implementation project(':domain')
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
}

test {
    useJUnitPlatform()
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

project(':user-api') {
    dependencies {
        implementation project(':domain')
        
        // ... 기존 의존성 유지 ...

        // Test 관련 의존성
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
            exclude group: 'org.slf4j', module: 'slf4j-simple'
        }
        testImplementation 'com.h2database:h2'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
        testImplementation 'org.mockito:mockito-core:5.8.0'
        testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'
    }

    test {
        useJUnitPlatform()
        systemProperty 'spring.profiles.active', 'test'
    }
}
